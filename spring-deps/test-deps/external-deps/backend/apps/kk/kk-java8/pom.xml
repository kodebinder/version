<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.company</groupId>
		<artifactId>kk</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>kk-java8</artifactId>
	<packaging>pom</packaging>
	<modules>
		<module>base64encodeanddecode</module>
		<module>closuresinlambda</module>
		<module>comparatorbeforejava8</module>
		<module>comparatorcomparingmethods</module>
		<module>comparatorimplementationusinglambda</module>
		<module>comparatornaturalorderandreverseorder</module>
		<module>comparatorreversedmethod</module>
		<module>comparatorsortingwithnullvalues</module>
		<module>comparatorsortlist</module>
		<module>comparatorwithjava8</module>
		<module>concurrencyapiimprovementsatomicpkgdoubleaccumulator</module>
		<module>concurrencyapiimprovementsatomicpkgdoubleadder</module>
		<module>concurrencyapiimprovementsatomicpkglongaccumulator</module>
		<module>concurrencyapiimprovementsatomicpkglongadder</module>
		<module>concurrencyapiimprovementscompleteablefuture</module>
		<module>concurrencyapiimprovementsconcurrenthashmap</module>
		<module>concurrencyapiimprovementsexecutorservice</module>
		<module>concurrencyapiimprovementsfailfastfailsafeiterator</module>
		<module>concurrencyapiimprovementsforkjoinpool</module>
		<module>datetimeapienhancements</module>
		<module>defaultmethodincollectionanditerableinterface</module>
		<module>defaultmethodinfunctionalinterfacebiconsumer</module>
		<module>defaultmethodinfunctionalinterfacebifunction</module>
		<module>defaultmethodinfunctionalinterfacebinaryoperator</module>
		<module>defaultmethodinlistinterface</module>
		<module>defaultmethodinmapinterface</module>
		<module>defaultandstaticmethodininterface</module>
		<module>functionalinterface</module>
		<module>functionalinterfacebiconsumer</module>
		<module>functionalinterfacebifunction</module>
		<module>functionalinterfacebinaryoperator</module>
		<module>functionalinterfacebipredicate</module>
		<module>functionalinterfacebooleansupplier</module>
		<module>functionalinterfacefunction</module>
		<module>functionalinterfacesupplier</module>
		<module>functionalinterfaceunaryoperator</module>
		<module>handlecheckedexceptioninlambda</module>
		<module>handleuncheckedexceptioninlambda</module>
		<module>ioenhancement</module>
		<module>iteratecollectionusingforeach</module>
		<module>iteratemapusingforeach</module>
		<module>lambdaexpression</module>
		<module>lambdaexpressionbestpractice</module>
		<module>lambdaexpressionwithfunctionalinterface</module>
		<module>lambdaexpressionwithreturnvalue</module>
		<module>mathclassenhancement</module>
		<module>methodreferencetoconstructorinlambda</module>
		<module>methodreferencetoinstancemethodinlambda</module>
		<module>methodreferencewithstaticmethod</module>
		<module>nashornjavascriptengine</module>
		<module>optional</module>
		<module>streambasicapi</module>
		<module>streamcreation</module>
		<module>streaminfinitestream</module>
		<module>streamoperationfilterandmatch</module>
		<module>streamoperationintermediateandterminal</module>
		<module>streamoperationmap</module>
		<module>streamoperationreductionandcollect</module>
		<module>streamparallelstream</module>
		<module>streampipeline</module>
		<module>streamreduction</module>
		<module>streamreferencingstream</module>
		<module>stringclassenhancement</module>
		<module>stringjoinerclass</module>
		<module>thisreferencevariableinlambda</module>
		<module>threadlocalclassenhancement</module>
		<module>typeinference</module>
		<module>wrapperclassenhancements</module>
		<module>zipfileclassenhancement</module>
	</modules>
</project>